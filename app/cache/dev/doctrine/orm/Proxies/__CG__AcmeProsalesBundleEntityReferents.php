<?php

namespace Proxies\__CG__\Acme\ProsalesBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Referents extends \Acme\ProsalesBundle\Entity\Referents implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'temp', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'file', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'file1', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'id', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'nom', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'prenom', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'username', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'salt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'password', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'email', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'fixe', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'mobile', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'signature', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'signatureweb', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'isActive', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'createdAt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'updatedAt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'connectedAt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'civilite', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'groupes');
        }

        return array('__isInitialized__', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'temp', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'file', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'file1', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'id', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'nom', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'prenom', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'username', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'salt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'password', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'email', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'fixe', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'mobile', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'signature', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'signatureweb', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'isActive', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'createdAt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'updatedAt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'connectedAt', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'civilite', '' . "\0" . 'Acme\\ProsalesBundle\\Entity\\Referents' . "\0" . 'groupes');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Referents $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', array($nom));

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', array());

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', array($prenom));

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', array());

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', array($username));

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', array());

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', array($salt));

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', array());

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setFixe($fixe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFixe', array($fixe));

        return parent::setFixe($fixe);
    }

    /**
     * {@inheritDoc}
     */
    public function getFixe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFixe', array());

        return parent::getFixe();
    }

    /**
     * {@inheritDoc}
     */
    public function setMobile($mobile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMobile', array($mobile));

        return parent::setMobile($mobile);
    }

    /**
     * {@inheritDoc}
     */
    public function getMobile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMobile', array());

        return parent::getMobile();
    }

    /**
     * {@inheritDoc}
     */
    public function setSignature($signature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSignature', array($signature));

        return parent::setSignature($signature);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignature', array());

        return parent::getSignature();
    }

    /**
     * {@inheritDoc}
     */
    public function setSignatureweb($signatureweb)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSignatureweb', array($signatureweb));

        return parent::setSignatureweb($signatureweb);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignatureweb()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignatureweb', array());

        return parent::getSignatureweb();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsActive($isActive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsActive', array($isActive));

        return parent::setIsActive($isActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsActive', array());

        return parent::getIsActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', array($createdAt));

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', array());

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedAt($updatedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedAt', array($updatedAt));

        return parent::setUpdatedAt($updatedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdatedAt', array());

        return parent::getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setConnectedAt($connectedAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConnectedAt', array($connectedAt));

        return parent::setConnectedAt($connectedAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getConnectedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConnectedAt', array());

        return parent::getConnectedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function setCivilite(\Acme\ProsalesBundle\Entity\Civilites $civilite = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCivilite', array($civilite));

        return parent::setCivilite($civilite);
    }

    /**
     * {@inheritDoc}
     */
    public function getCivilite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCivilite', array());

        return parent::getCivilite();
    }

    /**
     * {@inheritDoc}
     */
    public function addGroupe(\Acme\ProsalesBundle\Entity\Groupes $groupes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGroupe', array($groupes));

        return parent::addGroupe($groupes);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGroupe(\Acme\ProsalesBundle\Entity\Groupes $groupes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGroupe', array($groupes));

        return parent::removeGroupe($groupes);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupes', array());

        return parent::getGroupes();
    }

    /**
     * {@inheritDoc}
     */
    public function doStuffOnPostUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doStuffOnPostUpdate', array());

        return parent::doStuffOnPostUpdate();
    }

    /**
     * {@inheritDoc}
     */
    public function doStuffOnPostLoad()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doStuffOnPostLoad', array());

        return parent::doStuffOnPostLoad();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', array());

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', array($serialized));

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', array());

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', array());

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', array());

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', array());

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', array());

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', array());

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getRefDevis()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefDevis', array());

        return parent::getRefDevis();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsolutePath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsolutePath', array());

        return parent::getAbsolutePath();
    }

    /**
     * {@inheritDoc}
     */
    public function getWebPath()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWebPath', array());

        return parent::getWebPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile', array($file));

        return parent::setFile($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile', array());

        return parent::getFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setFile1(\Symfony\Component\HttpFoundation\File\UploadedFile $file = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFile1', array($file));

        return parent::setFile1($file);
    }

    /**
     * {@inheritDoc}
     */
    public function getFile1()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFile1', array());

        return parent::getFile1();
    }

    /**
     * {@inheritDoc}
     */
    public function image_to_base64($path_to_image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'image_to_base64', array($path_to_image));

        return parent::image_to_base64($path_to_image);
    }

    /**
     * {@inheritDoc}
     */
    public function doStuffOnPreUpdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'doStuffOnPreUpdate', array());

        return parent::doStuffOnPreUpdate();
    }

}
