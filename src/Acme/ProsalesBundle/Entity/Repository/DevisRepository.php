<?php

namespace Acme\ProsalesBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * DevisRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DevisRepository extends EntityRepository
{
    
    public function ListeProduitsParDevis($iddevis)
    {     
        $listeproduits = array();  
        $query = $this->getEntityManager()
                        ->createQuery("SELECT p FROM AcmeProsalesBundle:Lignesdevis p WHERE p.devis=:iddevis Order By p.ordre")
                        ->setParameter('iddevis', $iddevis)
                        ->getResult();   
        foreach ($query as $key => $lignedevis) {
            $listeproduits[] = array(
                        'id'=> $lignedevis->getId(),
                        'iddevis'=>$iddevis,
                        'ordre'=> $lignedevis->getOrdre(),
                        'prixht'=> $lignedevis->getPrixht(),
                        'totalht' => $lignedevis->getTotalht(),
                        'quantite'=> $lignedevis->getQuantite(),
                        'reference'=> $lignedevis->getReference(),             
                        'remise'=> $lignedevis->getRemise(),
                        'description'=> $lignedevis->getDescription (),              
                        'cat'=>'produit' 				
                        );       
        }
        try {
            return $listeproduits;
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }         
    }    
    

    
    public function ListeDerniersDevis($id) {
        $derniersdevis = array();
        $query = $this
            ->createQueryBuilder('u')
            ->where('Not Exists (select v.id from AcmeProsalesBundle:Devis v where v.parent=u.id)')
            ->orderBy('u.organisation','ASC')
            ->addOrderBy('u.createdAt', 'DESC');        
        if ($id!=0) {
            $query ->andWhere('u.referent=:id')
                    ->setParameter('id', $id);              
        }     
        $lesdevis = $query->getQuery()->getResult();
        foreach ($lesdevis as $key => $devis) {
            $derniersdevis[] = array(
                                    'id'=>$devis->getId(),
                                    'cat'=>'devis',                
                                    'reference'=>$devis->getReference(),
                                    'dossier'=>$devis->getDossier(),
                                    'idorg' => $devis->getOrganisation()->getId(),                
                                    'organisation' => $devis->getOrganisation()->__toString(),
                                    'datedevis' =>  date_format($devis->getCreatedAt(), "d-m-Y"),
                                    'contact'=>$devis->getContact()?$devis->getContact()->__toString():null,
                                    'referent'=>$devis->getReferent()->__toString(),
                                    'totalht'=>$devis->getTotalht(),   
                                    'totaltva'=>$devis->getTotaltva(),  
                                    'totalttc'=>$devis->getTotalttc(),  
                                    'fraisport'=>$devis->getFraisport(),                 
                                    'tauxtva'=>$devis->getTauxTva(),
                                    'mail'=>$devis->getEnvoimail()?"@":" ",
                                    'devisparent'=> $devis->getParent()==null?null:$devis->getParent()->getReference(),   
                                    'listeproduits'=> $this->ListeProduitsParDevis($devis->getId())            
                                    );
        }
        try {
            return $derniersdevis;
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }        
    }       
}
